#!/bin/bash
# Name: VEE
# Version: 0.3
#
# Note: This script must be sourced before it can be used directly:
#
#     source vee
#
# After that, an alias will be formed with the same name, "vee", which then
# takes over as the actual command.
#
# It is best to place `source vee` in your `~/.bashrc` or equivalent.

VEE_VENV_DIR="${HOME}/.venv"

# Make sure that all the variables we need are configured.
# FIXME: This should be cleaned up on exit.
configure_vars() {
    VEE_PROJECT=$(basename "$(pwd)")
    VEE_PROJECT_VENV_DIR="${VEE_VENV_DIR}/${VEE_PROJECT}"
    VEE_ACTIVATION_FILE="${VEE_VENV_DIR}/${VEE_PROJECT}/bin/activate"
}

# Override the `cd` command to allow for some automation.
cd() {
    # Run the built-in `cd` function as expected.
    builtin cd "$@"

    # Run activate when entering directory.
    vee activate
}

# The `vee` command in the session will henceforth refer to this function, and
# not to the identically names script.
vee() {

    configure_vars

    # Start a new virtual environment and install the packages found in
    # `requirements.txt`, if it is present.
    if [ "$1" = "start" ]; then

        # Check if virtual environment exists.
        if [ -f "${VEE_ACTIVATION_FILE}" ]; then
            echo "Error: Virtual environment already exists."
            echo "To rebuild it from 'requirements.txt', type:"
            echo "    vee restart"
            return
        fi

        # Move to virtual environment directory.
        OLD_DIR="$(pwd)"
        builtin cd "${VEE_VENV_DIR}"

        # Create Python virtual environment.
        python3 -m venv "${VEE_PROJECT}"

        # Move back to old directory.
        builtin cd "${OLD_DIR}"

        # Activate the newly created virtual environment.
        source "${VEE_ACTIVATION_FILE}"

        # Install packages in requirements.txt.
        if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
        fi

    # Activate virtual environment if possible.
    elif [ "$1" = "activate" ]; then

        if [ -f "requirements.txt" ] && [ -f "${VEE_ACTIVATION_FILE}" ]; then
            source "${VEE_ACTIVATION_FILE}"
        fi

    elif [ "$1" = "restart" ]; then

        # Delete project's virtual environment.
        if [ -d "$VEE_PROJECT_VENV_DIR" ]; then
            rm -rf "$VEE_PROJECT_VENV_DIR"
        fi

        # Start over.
        vee start

    # Default behavior.
    elif [ "$1" = "" ]; then

        vee start

    else
        echo "Invalid command."
    fi
}

# Only runs when script is sourced initially. This is done in case the shell
# sourcing the script is opened within a directory where `vee` should run.
if [ "$0" != "$BASH_SOURCE" ]; then
    vee activate
fi
