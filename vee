#!/bin/bash
#
# Note: This script should always be sourced when being run.
#
# Example:
#
#     . "$(vee)"
#
# or
#
#     source "$(vee)"
#
# but never simply:
#
#     vee
#
# The double-quotes are needed when the current path has spaces in them. If
# there are no spaces in the path, the double-quotes can be skipped.
VENV_DIR="${HOME}/.venv"

configure_vars() {
    PROJECT=$(basename "$(pwd)")
    VENV_PROJECT="${VENV_DIR}/${PROJECT}"
    ACTIVATION_FILE="${VENV_PROJECT}/bin/activate"
}

configure_vars

if [ "$1" = "venv-not-found" ]; then

    # Only called internally.
    echo "Error: Python virtual environment for project '${PROJECT}' was not found in '${VENV_DIR}'."

elif [ "$1" = "set-cd-redirected" ]; then

    cd() {
        builtin cd "$@"

        # Automatically activate virtual environment if appropriate.
        configure_vars
        if [ -f "requirements.txt" ] && [ -f "${ACTIVATION_FILE}" ]; then
            . "${ACTIVATION_FILE}"
        fi
    }


elif [ "$1" = "set-cd" ]; then

    echo "$0 set-cd-redirected"

elif [ "$1" = "venv-already-exists" ]; then

    # Only called internally.
    echo "Error: Virtual environment already exists."

elif [ "$1" = "start" ]; then

    # Check if virtual environment exists.
    if [ -f "${ACTIVATION_FILE}" ]; then
        echo "$0 venv-already-exists"
        exit 1
    fi

    # Move to virtual environment directory.
    OLD_DIR="$(pwd)"
    cd ${VENV_DIR}

    # Create Python virtual environment.
    python3 -m venv "${PROJECT}"

    # Move back to old directory.
    cd "${OLD_DIR}"

    echo ${ACTIVATION_FILE}

elif [ "$1" = "" ]; then

    # Default behavior. Activates a virtual environment if it exists.
    if [ -f "${ACTIVATION_FILE}" ]; then
        echo $ACTIVATION_FILE
    else
        echo "$0 venv-not-found"
    fi

else
    echo "Invalid command."
fi
